'use strict';

var vue = require('vue');
var auth0SpaJs = require('@auth0/auth0-spa-js');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

/**
 * @ignore
 */
var AUTH0_TOKEN = '$auth0';
/**
 * Injection token used to `provide` the `Auth0VueClient` instance. Can be used to pass to `inject()`
 *
 * ```js
 * inject(AUTH0_INJECTION_KEY)
 * ```
 */
var AUTH0_INJECTION_KEY = Symbol(AUTH0_TOKEN);

var version = '1.0.2';

/**
 * @ignore
 * Helper function to bind methods to itself, useful when using Vue's `provide` / `inject` API's.
 */
function bindPluginMethods(plugin, exclude) {
    Object.getOwnPropertyNames(Object.getPrototypeOf(plugin))
        .filter(function (method) { return !exclude.includes(method); })
        .forEach(function (method) { return (plugin[method] = plugin[method].bind(plugin)); });
}

/**
 * @ignore
 */
var client = vue.ref(null);
/**
 * @ignore
 */
var Auth0Plugin = /** @class */ (function () {
    function Auth0Plugin(clientOptions, pluginOptions) {
        this.clientOptions = clientOptions;
        this.pluginOptions = pluginOptions;
        this._isLoading = vue.ref(true);
        this._isAuthenticated = vue.ref(false);
        this._user = vue.ref({});
        this._idTokenClaims = vue.ref();
        this._error = vue.ref(null);
        this.isLoading = vue.readonly(this._isLoading);
        this.isAuthenticated = vue.readonly(this._isAuthenticated);
        this.user = vue.readonly(this._user);
        this.idTokenClaims = vue.readonly(this._idTokenClaims);
        this.error = vue.readonly(this._error);
        // Vue Plugins can have issues when passing around the instance to `provide`
        // Therefor we need to bind all methods correctly to `this`.
        bindPluginMethods(this, ['constructor']);
    }
    Auth0Plugin.prototype.install = function (app) {
        this._client = new auth0SpaJs.Auth0Client(__assign(__assign({}, this.clientOptions), { auth0Client: {
                name: 'auth0-vue',
                version: version
            } }));
        this.__checkSession(app.config.globalProperties.$router);
        app.config.globalProperties[AUTH0_TOKEN] = this;
        app.provide(AUTH0_INJECTION_KEY, this);
        client.value = this;
    };
    Auth0Plugin.prototype.loginWithRedirect = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this._client.loginWithRedirect(options)];
            });
        });
    };
    Auth0Plugin.prototype.loginWithPopup = function (options, config) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.__proxy(function () { return _this._client.loginWithPopup(options, config); })];
            });
        });
    };
    Auth0Plugin.prototype.logout = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                if (options === null || options === void 0 ? void 0 : options.localOnly) {
                    return [2 /*return*/, this.__proxy(function () { return _this._client.logout(options); })];
                }
                return [2 /*return*/, this._client.logout(options)];
            });
        });
    };
    /* istanbul ignore next */
    Auth0Plugin.prototype.getAccessTokenSilently = function (options) {
        if (options === void 0) { options = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.__proxy(function () { return _this._client.getTokenSilently(options); })];
            });
        });
    };
    Auth0Plugin.prototype.getAccessTokenWithPopup = function (options, config) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.__proxy(function () { return _this._client.getTokenWithPopup(options, config); })];
            });
        });
    };
    Auth0Plugin.prototype.checkSession = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.__proxy(function () { return _this._client.checkSession(options); })];
            });
        });
    };
    Auth0Plugin.prototype.handleRedirectCallback = function (url) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.__proxy(function () {
                        return _this._client.handleRedirectCallback(url);
                    })];
            });
        });
    };
    Auth0Plugin.prototype.buildAuthorizeUrl = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this._client.buildAuthorizeUrl(options)];
            });
        });
    };
    Auth0Plugin.prototype.buildLogoutUrl = function (options) {
        return this._client.buildLogoutUrl(options);
    };
    Auth0Plugin.prototype.__checkSession = function (router) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var search, result, appState, target;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        search = window.location.search;
                        if (!((search.includes('code=') || search.includes('error=')) &&
                            search.includes('state=') &&
                            !((_a = this.pluginOptions) === null || _a === void 0 ? void 0 : _a.skipRedirectCallback))) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.handleRedirectCallback()];
                    case 1:
                        result = _c.sent();
                        appState = result === null || result === void 0 ? void 0 : result.appState;
                        target = (_b = appState === null || appState === void 0 ? void 0 : appState.target) !== null && _b !== void 0 ? _b : '/';
                        window.history.replaceState({}, '', '/');
                        if (router) {
                            router.push(target);
                        }
                        return [2 /*return*/, result];
                    case 2: return [4 /*yield*/, this.checkSession()];
                    case 3:
                        _c.sent();
                        _c.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    Auth0Plugin.prototype.__refreshState = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _a = this._isAuthenticated;
                        return [4 /*yield*/, this._client.isAuthenticated()];
                    case 1:
                        _a.value = _d.sent();
                        _b = this._user;
                        return [4 /*yield*/, this._client.getUser()];
                    case 2:
                        _b.value = _d.sent();
                        _c = this._idTokenClaims;
                        return [4 /*yield*/, this._client.getIdTokenClaims()];
                    case 3:
                        _c.value = _d.sent();
                        this._isLoading.value = false;
                        return [2 /*return*/];
                }
            });
        });
    };
    Auth0Plugin.prototype.__proxy = function (cb, refreshState) {
        if (refreshState === void 0) { refreshState = true; }
        return __awaiter(this, void 0, void 0, function () {
            var result, e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, 3, 6]);
                        return [4 /*yield*/, cb()];
                    case 1:
                        result = _a.sent();
                        this._error.value = null;
                        return [3 /*break*/, 6];
                    case 2:
                        e_1 = _a.sent();
                        this._error.value = e_1;
                        throw e_1;
                    case 3:
                        if (!refreshState) return [3 /*break*/, 5];
                        return [4 /*yield*/, this.__refreshState()];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5: return [7 /*endfinally*/];
                    case 6: return [2 /*return*/, result];
                }
            });
        });
    };
    return Auth0Plugin;
}());

/**
 * Creates the Auth0 plugin.
 *
 * @param clientOptions The Auth Vue Client Options
 * @param pluginOptions Additional Plugin Configuration Options
 * @returns An instance of Auth0Plugin
 */
function createAuth0(clientOptions, pluginOptions) {
    return new Auth0Plugin(clientOptions, pluginOptions);
}
/**
 * Returns the registered Auth0 instance using Vue's `inject`.
 * @returns An instance of Auth0VueClient
 */
function useAuth0() {
    return vue.inject(AUTH0_INJECTION_KEY);
}

var Auth0Vue = { createAuth0: createAuth0, useAuth0: useAuth0 };

module.exports = Auth0Vue;
//# sourceMappingURL=auth0-vue.cjs.js.map
